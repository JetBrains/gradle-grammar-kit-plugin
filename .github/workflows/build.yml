name: Build
on:
  push:
    branches: [master]
  pull_request:

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4

  codeInspection:
    name: Code Inspection
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      - name: Qodana - Code Inspection
        uses: JetBrains/qodana-action@v3.2.1

  test:
    name: Test
    needs: gradleValidation
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        gradleVersion:
          - 6.6.1
          - 6.9.1
          - 7.3
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}

    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      - name: Run Linters and Test
        run: ./gradlew test -PtestGradleVersion="${{ matrix.gradleVersion }}"

      - name: Collect Test Results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.gradleVersion }}-${{ runner.os }}
          path: ${{ github.workspace }}/build/reports/tests/test/

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"

  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    name: Release Draft
    if: github.event_name != 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/{owner}/{repo}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/{owner}/{repo}/releases/{}

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ needs.test.outputs.version }} \
            --draft \
            --title "v${{ needs.test.outputs.version }}" \
            --notes "$(cat << 'EOM'
          ${{ needs.test.outputs.changelog }}
          EOM
          )"
